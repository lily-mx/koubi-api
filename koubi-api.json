{
  "openapi": "3.0.0",
  "info": {
    "title": "Koubi API",
    "description": "API for Koubi",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "BASE_URL",
      "description": "Provided separately"
    }
  ],
  "tags": [
    {
      "name": "Session",
      "description": "Handling multiple sessions logic, creation and deletion"
    },
    {
      "name": "Client",
      "description": "All functions related to the client"
    }
  ],
  "paths": {
    "/session/start/{sessionId}": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Start new session",
        "description": "Starts a session for the given session ID.",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the session (alphanumeric and - allowed)",
            "example": "f8377d8d-a589-4242-9ba6-9486a04ef80c"
          }
        ],
        "responses": {
          "200": {
            "description": "Status of the initiated session.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSessionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/session/status/{sessionId}": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Get session status",
        "description": "Status of the session with the given session ID.",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the session (alphanumeric and - allowed)",
            "example": "f8377d8d-a589-4242-9ba6-9486a04ef80c"
          }
        ],
        "responses": {
          "200": {
            "description": "Status of the session.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusSessionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/session/qr/{sessionId}/image": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Get session QR code as image",
        "description": "QR code as image of the session with the given session ID.",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the session (alphanumeric and - allowed)",
            "example": "f8377d8d-a589-4242-9ba6-9486a04ef80c"
          }
        ],
        "responses": {
          "200": {
            "description": "QR image.",
            "content": {
              "image/png": {}
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/client/sendMessage/{sessionId}": {
      "post": {
        "tags": [
          "Client"
        ],
        "description": "",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier for the session (alphanumeric and - allowed)",
            "example": "f8377d8d-a589-4242-9ba6-9486a04ef80c"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chatId": {
                    "type": "string",
                    "description": "The Chat id which contains the message (Group or Individual)"
                  },
                  "contentType": {
                    "type": "string",
                    "description": "The type of message content, must be one of the following: string or MessageMediaFromURL"
                  },
                  "content": {
                    "type": "object",
                    "description": "The content of the message, can be a string or an object"
                  },
                  "options": {
                    "type": "object",
                    "description": "The message send options"
                  }
                }
              },
              "examples": {
                "string": {
                  "value": {
                    "chatId": "6281288888888@c.us",
                    "contentType": "string",
                    "content": "Hello World!"
                  }
                },
                "MessageMediaFromURL": {
                  "value": {
                    "chatId": "6281288888888@c.us",
                    "contentType": "MessageMediaFromURL",
                    "content": "https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=Example"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StartSessionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Session initiated successfully"
          }
        },
        "xml": {
          "name": "StartSessionResponse"
        }
      },
      "StatusSessionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "state": {
            "type": "string",
            "example": "CONNECTED"
          },
          "message": {
            "type": "string",
            "example": "session_connected"
          }
        },
        "xml": {
          "name": "StatusSessionResponse"
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Some server error"
          }
        },
        "xml": {
          "name": "ErrorResponse"
        }
      },
      "NotFoundResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Some server error"
          }
        },
        "xml": {
          "name": "NotFoundResponse"
        }
      },
      "ForbiddenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Invalid API key"
          }
        },
        "xml": {
          "name": "ForbiddenResponse"
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
